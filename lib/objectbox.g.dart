// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'db/model/ObjectBoxData.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 6755882917164237029),
      name: 'TimeData',
      lastPropertyId: const obx_int.IdUid(7, 3412219069524884181),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 1515040765536716834),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 3109215897427306764),
            name: 'titleName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 467982470542049470),
            name: 'remainingSeconds',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 5893900421951983387),
            name: 'createdDate',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 8310565833337228416),
            name: 'nextId',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 8076511854582759317),
            name: 'type',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 3412219069524884181),
            name: 'remake',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(1, 6755882917164237029),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    TimeData: obx_int.EntityDefinition<TimeData>(
        model: _entities[0],
        toOneRelations: (TimeData object) => [],
        toManyRelations: (TimeData object) => {},
        getId: (TimeData object) => object.id,
        setId: (TimeData object, int id) {
          object.id = id;
        },
        objectToFB: (TimeData object, fb.Builder fbb) {
          final titleNameOffset = object.titleName == null
              ? null
              : fbb.writeString(object.titleName!);
          final typeOffset =
              object.type == null ? null : fbb.writeString(object.type!);
          final remakeOffset =
              object.remake == null ? null : fbb.writeString(object.remake!);
          fbb.startTable(8);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, titleNameOffset);
          fbb.addInt64(2, object.remainingSeconds);
          fbb.addInt64(3, object.createdDate?.millisecondsSinceEpoch);
          fbb.addInt64(4, object.nextId);
          fbb.addOffset(5, typeOffset);
          fbb.addOffset(6, remakeOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final createdDateValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 10);
          final titleNameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 6);
          final remainingSecondsParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 8);
          final createdDateParam = createdDateValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(createdDateValue);
          final nextIdParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 12);
          final typeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 14);
          final remakeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 16);
          final object = TimeData(
              titleName: titleNameParam,
              remainingSeconds: remainingSecondsParam,
              createdDate: createdDateParam,
              nextId: nextIdParam,
              type: typeParam,
              remake: remakeParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [TimeData] entity fields to define ObjectBox queries.
class TimeData_ {
  /// See [TimeData.id].
  static final id =
      obx.QueryIntegerProperty<TimeData>(_entities[0].properties[0]);

  /// See [TimeData.titleName].
  static final titleName =
      obx.QueryStringProperty<TimeData>(_entities[0].properties[1]);

  /// See [TimeData.remainingSeconds].
  static final remainingSeconds =
      obx.QueryIntegerProperty<TimeData>(_entities[0].properties[2]);

  /// See [TimeData.createdDate].
  static final createdDate =
      obx.QueryDateProperty<TimeData>(_entities[0].properties[3]);

  /// See [TimeData.nextId].
  static final nextId =
      obx.QueryIntegerProperty<TimeData>(_entities[0].properties[4]);

  /// See [TimeData.type].
  static final type =
      obx.QueryStringProperty<TimeData>(_entities[0].properties[5]);

  /// See [TimeData.remake].
  static final remake =
      obx.QueryStringProperty<TimeData>(_entities[0].properties[6]);
}
